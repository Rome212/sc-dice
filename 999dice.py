import base64, codecs
magic = 'aW1wb3J0IHJlcXVlc3RzLGpzb24sdGltZSxzeXMscmFuZG9tLG9zLGFyZ3BhcnNlCmltcG9ydCBjb2xvcmFtYQpmcm9tIGNvbG9yYW1hIGltcG9ydCBGb3JlLCBCYWNrLCBTdHlsZQpmcm9tIHJhbmRvbSBpbXBvcnQgcmFuZGludApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpjb2xvcmFtYS5pbml0KGF1dG9yZXNldD1UcnVlKQoKCgpwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0nOTk5IERpY2UgQm90IHwgVGhpcyBJcyBHYW1ibGluZyBCb3QgUGxhc2UgVGFrZSBPd24gWW91ciBSaXNrJykKcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICctYycsJy0tYmV0c2V0JywKICAgIGRlZmF1bHQ9MCwKICAgIGhlbHA9J0VudGVyIFlvdXIgQmV0c2V0IE51bWJlciAoZGVmYXVsdDogMCknCikKbXlfbmFtZXNwYWNlID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKCgoKCndpdGggb3BlbignY29uZmlnLmpzb24nLCAncicpIGFzIG15ZmlsZToKICAgICAgZGF0YT1teWZpbGUucmVhZCgpCiMgcGFyc2UgZmlsZQpvYmogPSBqc29uLmxvYWRzKGRhdGEpCgoKcHJpbnQgKFN0eWxlLk5PUk1BTCtGb3JlLk1BR0VOVEErIiAgICAgIF9fXyAgXyAgICAgICAgICAgX19fICAgICAgIF9fXG4gICAgIC8gXyBcKF8pX19fX19fICAgLyBfIClfX18gIC8gL19cbiAgICAvIC8vIC8gLyBfXy8gLV8pIC8gXyAgLyBfIFwvIF9fL1xuICAgL19fX18vXy9cX18vXF9fLyAvX19fXy9cX19fL1xfXy8iK1N0eWxlLk5PUk1BTCtGb3JlLkdSRUVOKyJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIitTdHlsZS5CUklHSFQrRm9yZS5SRUQrIlxuICAgICAgICAgIFRoaXMgSXMgR2FtYmxpbmcgQm90XG4gICAgICAgIFBsZWFzZSBUYWtlIE93biBZb3VyIFJpc2tcbiIpCgpoaWphdSA9IFN0eWxlLkJSSUdIVCtGb3JlLkdSRUVOCgpyZXMgPSBTdHlsZS5SRVNFVF9BTEwKYWJ1MiA9IFN0eWxlLk5PUk1BTCtGb3JlLldISVRFCnVuZ3UgPSBTdHlsZS5OT1JNQUwrRm9yZS5NQUdFTlRBCmhpamF1MiA9IFN0eWxlLk5PUk1BTCtGb3JlLkdSRUVOCnJlZDIgPSBTdHlsZS5OT1JNQUwrRm9yZS5SRUQKcmVkID0gU3R5bGUuQlJJR0hUK0ZvcmUuUkVECmMgPSByZXF1ZXN0cy5zZXNzaW9uKCkKCnVybCA9ICJodHRwczovL3d3dy45OTlkb2dlLmNvbS9hcGkvd2ViLmFzcHgiCnVhID0gewogIk9yaWdpbiI6ICJmaWxlOi8vIiwKICJ1c2VyLWFnZW50Ijogb2JqWyJVc2VyLUFnZW50Il0sCiAiQ29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsCiAiQWNjZXB0IjogIiovKiIsCiAiQWNjZXB0LUxhbmd1YWdlIjogImlkLUlELGlkO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IiwKICJYLVJlcXVlc3RlZC1XaXRoIjogImNvbS5yZWxhbmQucmVsYW5kaWNlYm90Igp9CgpkZWYga29udmVydChwZXJzZW4sdGFydWhhbik6CiAgICBnbG9iYWwgaGlnaAogICAgZ2xvYmFsIGxvdwogICAgYyA9IHN0cig5OTk5OTkgKiBmbG9hdChwZXJzZW4pIC8gMTAwKQogICAgaWYgdGFydWhhbiA9PSAiSGkiIG9yIHRhcnVoYW4gPT0gImhpIiBvciB0YXJ1aGFuID09ICJISSI6CiAgICAgICBuID0gc3RyKGMuc3BsaXQoIi4iKVsxXSkKICAgICAgIHBhbmdrYXQgPSA2IC0gbGVuKG4pCiAgICAgICBsb3cgPSBpbnQoaW50KG4pICogKDEwICoqIHBhbmdrYXQpKQogICAgICAgaGlnaCA9IDk5OTk5OQogICAgaWYgdGFydWhhbiA9PSAiTG8iIG9yIHRhcnVoYW4gPT0gIkxPVyIgb3IgdGFydWhhbiA9PSAibG93IiBvciB0YXJ1aGFuID09ICJMb3ciIG9yIHRhcnVoYW4gPT0gIkxPIjoKICAgICAgIGxvdyA9IDAKICAgICAgIGhpZ2ggPSBpbnQoYy5zcGxpdCgiLiIpWzBdKQoKCmRlZiByZXYobnVtKToKICAgIGlmIChsZW4obnVtKSA8IDgpOgogICAgICAgIHBhbmphbmdfbm9sID0gaW50KDggLSBsZW4obnVtKSkKICAgICAgICBudW0gPSAoKHBhbmphbmdfbm9sKiIwIikrc3RyKG51bSkpCiAgICAgICAgcmVzdWx0ID0gKCIwLiIrbnVtKQogICAgaWYgKGxlbihudW0pID09IDgpOgogICAgICAgIHBhbmphbmdfbm9sID0gaW50KDggLSBsZW4obnVtKSkKICAgICAgICBudW0gPSAoKHBhbmphbmdfbm9sKiIwIikrc3RyKG51bSkpCiAgICAgICAgcmVzdWx0ID0gKCIwLiIrbnVtKQogICAgZWxzZToKICAgICAgICBsZW5fbnVtID0gbGVuKG51bSkKICAgICAgICBlbmQgPSBudW1bLTg6XQogICAgICAgIGZpcnN0ID0gbnVtWzpsZW5fbnVtLThdCiAgICAgICAgcmVzdWx0ID0gKGZpcnN0KyIuIitlbmQpCiAgICByZXR1cm4gKHJlc3VsdCkKCgpkZWYgZGljZSh3cyxscyk6CiAgIGlmIG15X25hbWVzcGFjZS5iZXRzZXQgPT0gIkF1dG8iIG9yIG15X25hbWVzcGFjZS5iZXRzZXQgPT0gImF1dG8iIG9yIG15X25hbWVzcGFjZS5iZXRzZXQgPT0gIkFVVE8iOgogICAgICB1cnV0ID0gMAogICAgICBqdW1sYWh1bGFuZz0gMAogICAgICB3aGlsZSBUcnVlOgogICAgICAgICBqdW1sYWh1bGFuZys9MQogICAgICAgICB0cnk6CiAgICAgICAgICAgICBwZXNhbiA9IG9ialsiQ29uZmlnIl1banVtbGFodWxhbmddWyJOYW1lIEJldCBTZXQiXQogICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICBicmVhawogICBlbHNlOgogICAgICB1cnV0ID0gaW50KG15'
love = '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'
god = 'ICAgICAgIG1lbml0ID0gaW50KG1lbml0KSArIGludChvYmpbIkludGVydmFsIl0pCiAgICAgICAgICAgICB1cnV0ICs9MQogICAgICAgICAgICAgaWYgdXJ1dCA9PSBqdW1sYWh1bGFuZzoKICAgICAgICAgICAgICAgIHVydXQgPSAwCiAgICAgICAgICAgICBwcmludCAoIkNoYW5nZSBCZXQgU2V0ICIrb2JqWyJDb25maWciXVt1cnV0XVsiTmFtZSBCZXQgU2V0Il0rIiAgICAgICAgICAgICAgICAgICAgICAgICAgICIpCiAgICAgICAgICAgICBzbHAgPSBpbnQob2JqWyJDb25maWciXVt1cnV0XVsiSW50ZXJ2YWwiXSkgLyAxMDAwCiAgICAgICAgICAgICBsaW1pdF9hID0gaW50KG9ialsiQ29uZmlnIl1bdXJ1dF1bIlJlc2V0IElmIFdpbiJdKSAtIDEKICAgICAgICAgICAgIHBheWluID0gaW50KGZsb2F0KG9ialsiQ29uZmlnIl1bdXJ1dF1bIkJhc2UgQmV0Il0pKigxMCAqKiA4KSkKCiAgICAgICAgZWxzZToKICAgICAgICAgIHVydXQgPSBpbnQobXlfbmFtZXNwYWNlLmJldHNldCkKCiAgICAgICAgaWYgb2JqWyJDb25maWciXVt1cnV0XVsiUmFuZG9tIENoYW5jZSJdWyJUb2dnbGUiXSA9PSAiT04iIG9yIG9ialsiQ29uZmlnIl1bdXJ1dF1bIlJhbmRvbSBDaGFuY2UiXVsiVG9nZ2xlIl0gPT0gIk9uIiBvciBvYmpbIkNvbmZpZyJdW3VydXRdWyJSYW5kb20gQ2hhbmNlIl1bIlRvZ2dsZSJdID09ICJvbiI6CiAgICAgICAgICAgaGFzaWxfY2hhbmNlID0gcm91bmQocmFuZG9tLnVuaWZvcm0oZmxvYXQob2JqWyJDb25maWciXVt1cnV0XVsiUmFuZG9tIENoYW5jZSJdWyJNaW4iXSksZmxvYXQob2JqWyJDb25maWciXVt1cnV0XVsiUmFuZG9tIENoYW5jZSJdWyJNYXgiXSkpLDIpCiAgICAgICAgICAgY29rID0gbGVuKHN0cihoYXNpbF9jaGFuY2UpKQogICAgICAgICAgIGlmIGNvayA9PSAzOgogICAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoIlxyIitzdHIoaGFzaWxfY2hhbmNlKSsiICAgIikKICAgICAgICAgICBpZiBjb2sgPT0gNDoKICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKCJcciIrc3RyKGhhc2lsX2NoYW5jZSkrIiAgIikKICAgICAgICAgICBpZiBjb2sgPT0gNToKICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKCJcciIrc3RyKGhhc2lsX2NoYW5jZSkrIiAiKQogICAgICAgICAgIGtvbnZlcnQoaGFzaWxfY2hhbmNlLHN0cihyb2xlYmV0KSkKICAgICAgICBlbHNlOgogICAgICAgICAgIGtvbnZlcnQob2JqWyJDb25maWciXVt1cnV0XVsiQ2hhbmNlIl0sc3RyKHJvbGViZXQpKQogICAgICAgIHRpbWUuc2xlZXAoZmxvYXQoc2xwKSkKICAgICAgICBhbW91bnQgPSBpbnQoYW1vdW50KQogICAgICAgIG4rPTEKICAgICAgICBkYXRhID0gewogICAgICAgICAgImEiOiAiUGxhY2VCZXQiLAogICAgICAgICAgInMiOiBqc1siU2Vzc2lvbkNvb2tpZSJdLAogICAgICAgICAgIlBheUluIjogYW1vdW50LAogICAgICAgICAgIkxvdyI6IGxvdywKICAgICAgICAgICJIaWdoIjogaGlnaCwKICAgICAgICAgICJDbGllbnRTZWVkIjogcmFuZGludCgwLDk5OTk5OSksCiAgICAgICAgICAiQ3VycmVuY3kiOiAiZG9nZSIsCiAgICAgICAgICAiUHJvdG9jb2xWZXJzaW9uIjogIjIiCiAgICAgICAgfQogICAgICAgIGlmIHByb2YgPiBmbG9hdChvYmpbIlRhcmdldCBQcm9maXQiXSk6CiAgICAgICAgICAgcHJpbnQgKGhpamF1KyJcbllheS4hIFxuUHJvZml0IE1lbmNhcGFpIFRhcmdldC4uLi4uIVxuIitoaWphdSsiUHJvZml0ICIrcmVzK3N0cihwcm9mKSkKICAgICAgICAgICBzeXMuZXhpdCgpCiAgICAgICAgcjEgPSBjLnBvc3QodXJsLGhlYWRlcnM9dWEsZGF0YT1kYXRhKQogICAgICAgIGpzbiA9IGpzb24ubG9hZHMocjEudGV4dCkKICAgICAgICBwcm9mID0gKGZsb2F0KGpzblsiU3RhcnRpbmdCYWxhbmNlIl0gKyBpbnQoanNuWyJQYXlPdXQiXSkgLSBpbnQoYW1vdW50KSAtIGp1bWJsKS8oMTAgKiogOCkpCiAgICAgICAganVtID0gaW50KGpzblsiUGF5T3V0Il0pIC0gaW50KGFtb3VudCkKICAgICAgICBpZiBqc25bIlN0YXJ0aW5nQmFsYW5jZSJdID4gd3M6CiAgICAgICAgICAgcHJpbnQgKHVuZ3UrIlsiK3JlcytzdHIocm9sZWJldCkrdW5ndSsiXSAiK2hpamF1MitzdHIoZmxvYXQoYW1vdW50KS8oMTAgKiogOCkpK2hpamF1KyIgWyAiK3JlcytzdHIoZmxvYXQoaW50KGpzblsiU3RhcnRpbmdCYWxhbmNlIl0pICsgaW50KGp1bSkpLygxMCAqKiA4KSkraGlqYXUyKyIgXSAiK2hpamF1MisiUHJvZml0IityZXMrc3RyKHByb2YpKQogICAgICAgICAgIHByaW50IChoaWphdSsiWWF5LiFcbkJhbGFuY2UgU3VkYWggTWVtZW51aGkgVGFyZ2V0Li4uLi4hIikKICAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICAgICAgICAgc3lzLmV4aXQoKQogICAgICAgIGlmIGpzblsiU3RhcnRpbmdCYWxhbmNlIl0gPCBsczoKICAgICAgICAgICBwcmludCAodW5ndSsiWyIrcmVzK3N0cihyb2xlYmV0KSt1bmd1KyJdIityZWQyKyItIitzdHIoZmxvYXQoYW1vdW50KS8oMTAgKiogOCkpK3JlZDIrIiBbICIrcmVzK3N0cigoZmxvYXQoaW50KGpzblsiU3RhcnRpbmdCYWxhbmNlIl0pICsgaW50KGp1bSkpLygxMCAqKiA4KSkpK3JlZDIrIiBdICIrcmVkMisiTG9zZSAiK3JlcytzdHIocHJvZikpCiAgICAgICAgICAgcHJpbnQgKFN0eWxlLkJSSUdIVCtGb3Jl'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))